# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.


#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

-- 1) Who are the top 10 artists based on popularity? 
SELECT artist_name, popularity 
FROM Spotifydata
ORDER BY popularity desc
LIMIT 10;

-- 2) What is the average danceability by artist and track?
SELECT artist_name, track_name, 
AVG(danceability),
AVG(duration_ms), 
AVG(energy)
FROM Spotifydata
GROUP BY artist_name, track_name;

--3) Who are the artist with a time signature less than 4
SELECT artist_name
FROM Spotifydata
WHERE time_signature <= 3;

-- 4) Who are the artist with a time signature greater than 3 and valence less than 0.1?

SELECT artist_name, time_signature, valence
FROM Spotifydata
WHERE time_signature > 3 AND valence < 0.1;

-- 5) What artist released the longest song?

    1 of 2 Solution

SELECT MAX(duration_ms), artist_name
FROM Spotifydata;


    2 of 2 Solution
SELECT duration_ms AS 'Longest song', artist_name
FROM Spotifydata
ORDER BY 'Longest song' desc
LIMIT 1;

------------------------------------------
-- 6) What's the 10 most popular songs?
SELECT track_name, popularity, danceability
FROM Spotifydata
ORDER BY popularity desc LIMIT 10;


-- 7) What's the average danceability for the 10 most popular songs?

SELECT AVG(danceability)
FROM Spotifydata
ORDER BY popularity desc LIMIT 10;

